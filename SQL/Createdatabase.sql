use db_sistemregistrasimatakuliah;

CREATE TABLE PERSON (
	ID VARCHAR(12) NOT NULL,
	Name VARCHAR(50) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE STUDENT ( 
	ID VARCHAR(12) NOT NULL,
	Year INT NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (ID) REFERENCES PERSON(ID)
);

CREATE TABLE STAFF (
	ID VARCHAR(12) NOT NULL,
	Department VARCHAR(12) NOT NULL,
	Room VARCHAR(12) NOT NULL,
	Extension VARCHAR(12) NOT NULL,
	Email VARCHAR(50) NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (ID) REFERENCES PERSON(ID),
	UNIQUE (Email)
);

CREATE TABLE INSTRUCTOR (
	ID VARCHAR(12) NOT NULL,
	Department VARCHAR(12) NOT NULL,
	Room VARCHAR(12) NOT NULL,
	Extension VARCHAR(12) NOT NULL,
	Email VARCHAR(50) NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (ID) REFERENCES PERSON(ID),
	UNIQUE (Email)
);

CREATE TABLE LA (
	ID VARCHAR(12) NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (ID) REFERENCES STAFF(ID)
);

CREATE TABLE TA (
	ID VARCHAR(12) NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (ID) REFERENCES STAFF(ID)
);

CREATE TABLE COURSE (
	CourseID VARCHAR(12) NOT NULL,
	Title VARCHAR(12) NOT NULL,
	Descr VARCHAR(240) NOT NULL,
	Classroom VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID)
);

CREATE TABLE LAB (
	CourseID VARCHAR(12) NOT NULL,
	Section INT NOT NULL,
	Lab VARCHAR(12),
	PRIMARY KEY (CourseID, Section),
	FOREIGN KEY (CourseID) REFERENCES COURSE(CourseID)
);

CREATE TABLE TUTORIAL (
	CourseID VARCHAR(12) NOT NULL,
	Section INT NOT NULL,
	Classroom VARCHAR(12),
	PRIMARY KEY (CourseID, Section),
	FOREIGN KEY (CourseID) REFERENCES COURSE(CourseID)
);

CREATE TABLE HASLA (
	CourseID VARCHAR(12) NOT NULL,
	Section INT NOT NULL,
	ID VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID, Section),
	FOREIGN KEY (CourseID, Section) REFERENCES LAB(CourseID, Section),
	FOREIGN KEY (ID) REFERENCES LA(ID)
);

CREATE TABLE HASTA (
	CourseID VARCHAR(12) NOT NULL,
	Section INT NOT NULL,
	ID VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID, Section),
	FOREIGN KEY (CourseID, Section) REFERENCES TUTORIAL(CourseID, Section),
	FOREIGN KEY (ID) REFERENCES TA(ID)
);

CREATE TABLE HASI (
	CourseID CHAR(5) NOT NULL,
	ID VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID),
	FOREIGN KEY (CourseID) REFERENCES COURSE(CourseID),
	FOREIGN KEY (ID) REFERENCES INSTRUCTOR(ID)
);

CREATE TABLE Y1COURSE (
	CourseID VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID),
	FOREIGN KEY (CourseID) REFERENCES COURSE(CourseID)
);

CREATE TABLE Y2COURSE (
	CourseID VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID),
	FOREIGN KEY (CourseID) REFERENCES COURSE(CourseID)
);

CREATE TABLE Y3COURSE (
	CourseID VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID),
	FOREIGN KEY (CourseID) REFERENCES COURSE(CourseID)
);

CREATE TABLE Y4COURSE (
	CourseID VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID),
	FOREIGN KEY (CourseID) REFERENCES COURSE(CourseID)
);

CREATE TABLE PREREQ11 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y1COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y1COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ12 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y1COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y2COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ13 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y1COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y3COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ14 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y1COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y4COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ22 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y2COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y2COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ23 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y2COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y3COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ24 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y2COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y4COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ33 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y3COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y3COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ34 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y3COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y4COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE PREREQ44 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y4COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y4COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE ANTIREQ11 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y1COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y1COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE ANTIREQ22 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y2COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y2COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE ANTIREQ33 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y3COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y3COURSE(CourseID),
	CHECK (CourseID_1 <>  CourseID_2)
);
	
CREATE TABLE ANTIREQ44 (
	CourseID_1 VARCHAR(12) NOT NULL,
	CourseID_2 VARCHAR(12) NOT NULL,
	PRIMARY KEY (CourseID_1, CourseID_2),
	FOREIGN KEY (CourseID_1) REFERENCES Y4COURSE(CourseID), 
	FOREIGN KEY (CourseID_2) REFERENCES Y4COURSE(CourseID),
	CHECK (CourseID_1 <> CourseID_2)
);

CREATE TABLE L1 (
	ID VARCHAR(12) NOT NULL,
	CourseID CHAR(12) NOT NULL,
	Status CHAR(1) NOT NULL,
	PRIMARY KEY (ID, CourseID),
	FOREIGN KEY (ID) REFERENCES STUDENT(ID), 
	FOREIGN KEY (CourseID) REFERENCES Y1COURSE(CourseID),
	CHECK (Status IN ('P', 'F', 'R'))
);

CREATE TABLE L2 (
	ID VARCHAR(12) NOT NULL,
	CourseID CHAR(12) NOT NULL,
	Status CHAR(1) NOT NULL,
	PRIMARY KEY (ID, CourseID),
	FOREIGN KEY (ID) REFERENCES STUDENT(ID), 
	FOREIGN KEY (CourseID) REFERENCES Y2COURSE(CourseID),
	CHECK (Status IN ('P', 'F', 'R'))
);

CREATE TABLE L3 (
	ID VARCHAR(12) NOT NULL,
	CourseID CHAR(12) NOT NULL,
	Status CHAR(1) NOT NULL,
	PRIMARY KEY (ID, CourseID),
	FOREIGN KEY (ID) REFERENCES STUDENT(ID), 
	FOREIGN KEY (CourseID) REFERENCES Y3COURSE(CourseID),
	CHECK (Status IN ('P', 'F', 'R'))
);

CREATE TABLE L4 (
	ID VARCHAR(12) NOT NULL,
	CourseID CHAR(12) NOT NULL,
	Status CHAR(1) NOT NULL,
	PRIMARY KEY (ID, CourseID),
	FOREIGN KEY (ID) REFERENCES STUDENT(ID), 
	FOREIGN KEY (CourseID) REFERENCES Y4COURSE(CourseID),
	CHECK (Status IN ('P','F','R'))
);